harnessApiVersion: '1.0'
type: INSTALL
commandUnitType: COMMAND
commandUnits:
- command: |-
    $releaseId="${workflow.ReleaseNo}"
    $serviceName="${service.Name}"
    $artifactFilename = $env:TEMP + "\" + $serviceName + "-release-" + $releaseId + ".zip"

    Write-Host "Starting Deployment [id:" $releaseId "]"
    Write-Host "Downloading artifact file - URL: ${artifact.url} to File: " $artifactFilename
    Invoke-WebRequest -Uri "${artifact.url}" -OutFile $artifactFilename
    Write-Host "Done."
  commandUnitType: EXEC
  deploymentType: SSH
  name: Download Artifacts
  scriptType: POWERSHELL
- command: |-
    $serviceName="${service.Name}"
    $releaseId="${workflow.ReleaseNo}"
    $artifactFilename = $env:TEMP + "\" + $serviceName + "-release-" + $releaseId + ".zip"
    $appPhysicalDirectory=$env:SYSTEMDRIVE + "\Artifacts\" + $serviceName + "\release-" + $releaseId

    Write-Host "Extracting package from" $artifactFilename "to" $appPhysicalDirectory
    Expand-Archive -Path $artifactFilename -DestinationPath $appPhysicalDirectory -Force
    Write-Host "Done."
  commandUnitType: EXEC
  deploymentType: SSH
  name: Expand Artifacts
  scriptType: POWERSHELL
- command: |-
    Import-Module WebAdministration

    $AppPoolName = "DefaultAppPool"
    $AppPoolDotNetVersion = "v4.0"

    if (!(Test-Path IIS:\AppPools\$AppPoolName -pathType container))
    {
        Write-Host "Creating AppPool:" $AppPoolName
        $appPool = New-Item IIS:\AppPools\$AppPoolName
    }
    else
    {
        Write-Host "Updating AppPool:" $AppPoolName
        $appPool = Get-Item IIS:\AppPools\$AppPoolName
    }

    $appPool | Set-ItemProperty -Name "managedRuntimeVersion" -Value $AppPoolDotNetVersion

    Get-Item IIS:\AppPools\$AppPoolName | ft
    Write-Host "Done."
  commandUnitType: EXEC
  deploymentType: SSH
  name: Create AppPool
  scriptType: POWERSHELL
- command: |-
    Import-Module WebAdministration

    $releaseId="${workflow.ReleaseNo}"
    $SiteName = "${service.Name}"
    $SiteProtocol = "http"
    $SitePort=80
    $SiteHostName = "*"
    $SitePhysicalDirectory = $env:SYSTEMDRIVE + "\Artifacts\" + $SiteName + "\release-" + $releaseId
    $AppPoolName = "DefaultAppPool"

    if (!(Test-Path IIS:\Sites\$SiteName -pathType container))
    {
        $site = New-Item IIS:\Sites\$SiteName -physicalPath $sitePhysicalDirectory -bindings @{protocol=$SiteProtocol;bindingInformation=":"+$SitePort+":"+$SiteHostName} -ApplicationPool $AppPoolName -AutoStart $true
        Write-Host "Created Website:" $SiteName
    }
    else
    {
        $site = Get-Item IIS:\Sites\$SiteName
        $Site | Set-ItemProperty -Name "physicalPath" -Value $sitePhysicalDirectory
        $Site | Set-ItemProperty -Name "bindings" -Value @{protocol=$SiteProtocol;bindingInformation=":"+$SitePort+":"+$SiteHostName}
        Write-Host "Updated Website:" $SiteName
    }

    Start-WebSite $SiteName
    Get-Item IIS:\Sites\$SiteName
    Write-Host "Done."
  commandUnitType: EXEC
  deploymentType: SSH
  name: Create Website
  scriptType: POWERSHELL
targetToAllEnv: true
